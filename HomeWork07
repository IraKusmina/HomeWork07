//  Задача 1: Задайте значения M и N. Напишите программу, которая выведет все натуральные числа в промежутке от M до N. 
// Использовать рекурсию, не использовать циклы.
string findNumbersMN (int m, int n){
    if (m == (n - 1))
    return "";
    return findNumbersMN (m - 1, n) + ($"{m} ");
}

Console.Clear();
Console.Write ("Введите первое число: ");
int m = int.Parse(Console.ReadLine()!);
Console.Write ("Введите второе число: ");
int n = int.Parse(Console.ReadLine()!);
if (m > n){
    Console.WriteLine ($"Натуральаные числа от {n} до {m} : {findNumbersMN (m, n)}");
}
else {
    Console.WriteLine ($"Натуральаные числа от {m} до {n} : {findNumbersMN (n, m)}");
}

// Задача 2. Напишите программу вычисления функции Аккермана с помощью рекурсии. 
// Даны два неотрицательных числа m и n.
int findFunctionAck (int m, int n){
    if (m == 0){
        return (n+1);
    }
    else 
        if (n == 0){
            return findFunctionAck (m - 1, 1);
        }
        else{
            return findFunctionAck (m-1, findFunctionAck (m, n-1));
        }
}

Console.Clear();
Console.Write ("Введите число m: ");
int m = int.Parse(Console.ReadLine()!);
Console.Write ("Введите число n: ");
int n = int.Parse(Console.ReadLine()!);
Console.WriteLine($"Функция Аккермана A({m},{n}) равна {findFunctionAck (m,n)}");

// Задача 3: Задайте произвольный массив. 
// Выведете его элементы, начиная с конца. 
// Использовать рекурсию, не использовать циклы.
string printMatrix (int [] matrix, int size){
    if (matrix.Length == size)
        return "";
    else{
        return printMatrix (matrix, size + 1) + $"{matrix [size]}, ";
    }
}

Console.Clear();
int [] matrix = {2, 5, 8, 12, 52, 4, 6, 32};
Console.WriteLine ($"Конечный массив: {printMatrix(matrix, 0)}");

